{
  "info": {
    "name": "ANRS User APIs - Extended Tests",
    "description": "Extended collection with error testing and edge cases for ANRS User APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Error Testing",
      "item": [
        {
          "name": "Register - Invalid Data",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Validation error returned', function () {",
                  "    pm.expect(pm.response.code).to.equal(400);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.false;",
                  "    pm.expect(response.errors).to.exist;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"\",\n  \"email\": \"invalid-email\",\n  \"password\": \"123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "register"]
            },
            "description": "Test registration with invalid data"
          }
        },
        {
          "name": "Register - Duplicate Email",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Duplicate email rejected', function () {",
                  "    pm.expect(pm.response.code).to.equal(409);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.false;",
                  "    pm.expect(response.message).to.include('already exists');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Another User\",\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"AnotherPass123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "register"]
            },
            "description": "Test registration with existing email"
          }
        },
        {
          "name": "Login - Wrong Credentials",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Login failed with wrong credentials', function () {",
                  "    pm.expect(pm.response.code).to.equal(401);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.false;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"wrongpassword\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            },
            "description": "Test login with wrong password"
          }
        },
        {
          "name": "Login - Nonexistent User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Login failed for nonexistent user', function () {",
                  "    pm.expect(pm.response.code).to.equal(401);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.false;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"nonexistent@example.com\",\n  \"password\": \"SomePassword123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            },
            "description": "Test login with nonexistent email"
          }
        },
        {
          "name": "Access Without Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Access denied without token', function () {",
                  "    pm.expect(pm.response.code).to.equal(401);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.error).to.include('Access denied');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users/profile",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "profile"]
            },
            "description": "Test accessing protected route without token"
          }
        },
        {
          "name": "Invalid Token Format",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Invalid token format rejected', function () {",
                  "    pm.expect(pm.response.code).to.equal(401);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "InvalidFormat token_here"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/verify",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "verify"]
            },
            "description": "Test with invalid token format"
          }
        },
        {
          "name": "Invalid Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Invalid token rejected', function () {",
                  "    pm.expect(pm.response.code).to.equal(401);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer invalid_token_here"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/verify",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "verify"]
            },
            "description": "Test with invalid token"
          }
        },
        {
          "name": "Update Profile - Invalid Email",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Invalid email rejected', function () {",
                  "    pm.expect(pm.response.code).to.equal(400);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.false;",
                  "    pm.expect(response.errors).to.exist;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"\",\n  \"email\": \"invalid-email-format\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/profile",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "profile"]
            },
            "description": "Test profile update with invalid data"
          }
        },
        {
          "name": "Change Password - Wrong Current",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Wrong current password rejected', function () {",
                  "    pm.expect(pm.response.code).to.equal(401);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.false;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"currentPassword\": \"wrongpassword\",\n  \"newPassword\": \"NewSecurePass123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/password",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "password"]
            },
            "description": "Test password change with wrong current password"
          }
        },
        {
          "name": "Change Password - Weak New Password",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Weak password rejected', function () {",
                  "    pm.expect(pm.response.code).to.equal(400);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.false;",
                  "    pm.expect(response.errors).to.exist;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"currentPassword\": \"SecurePass123\",\n  \"newPassword\": \"weak\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/password",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "password"]
            },
            "description": "Test password change with weak new password"
          }
        },
        {
          "name": "Delete Account - Wrong Password",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Wrong password for deletion rejected', function () {",
                  "    pm.expect(pm.response.code).to.equal(401);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.false;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"password\": \"wrongpassword\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/account",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "account"]
            },
            "description": "Test account deletion with wrong password"
          }
        },
        {
          "name": "Delete Account - No Password",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Missing password for deletion rejected', function () {",
                  "    pm.expect(pm.response.code).to.equal(400);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.false;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/account",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "account"]
            },
            "description": "Test account deletion without password"
          }
        }
      ]
    }
  ]
}
